global !p
def visibility(t, opts):
	if t:
		opts = [ m[len(t):] for m in opts if m.startswith(t) ]
	if len(opts) == 1:
		return opts[0]
	if len(opts) == 0:
		return ''
	return "(" + "|".join(opts) + ")"
endglobal

snippet db "DocBlock" b
/**
 * ${1}
 */
endsnippet

snippet fn "Anonymous function" w
function ($1) {
	$2
}
endsnippet

snippet pf "PHP function" b
public function ${1}(${2}): ${4:void}
{
	${5:throw new \Exception("Not implemented yet");}
}
endsnippet

snippet cf "Constructor function" b
public function __construct(${1})
{
	${2}
}
endsnippet

snippet tf "Test function" b
/**
 * @test
 */
public function ${1}(): void
{
	$this->fail('Test ' . __METHOD__ . ' not implemented');
	// Given
	${2}
	// Assert

	// When

	// Then
}
endsnippet

snippet mo "Create mock" b
$$1 = $this->createMock($2::class);
endsnippet

snippet cm "Create configured mock" b
$$1 = $this->createConfiguredMock($2::class, ['$3' => $4]);
endsnippet

snippet td "TODO comment"
// TODO $1 [`!v strftime("%Y-%m-%d %H:%M")`]
endsnippet

snippet fm "FIXME comment"
// FIXME $1
endsnippet

snippet v* "var type hint"
/** @var $1 $$2 */
endsnippet

snippet dd "dump() and die" b
dump($1);die;
endsnippet

snippet vi "var_dump() and die" b
var_dump($1);die;
endsnippet

snippet vd "var_dump()" b
var_dump($1);
endsnippet

snippet r "return" b
return $1`!p snip.rv=visibility(t[1], ['true;','false;','null;','[];','$this;'])`
endsnippet

snippet t "$this->" w
$this->
endsnippet

snippet SW "Suppress phpmd warning"
@SuppressWarnings(PHPMD.`!p snip.rv=visibility(t[1], ['ShortMethodName'])`)
endsnippet

snippet fe "foreach loop" b
foreach ($1 as $2) {
	${VISUAL}
}
endsnippet

snippet wh "while loop" b
while ($1) {
	${VISUAL}
}
endsnippet

snippet sw "switch" b
switch ($1) {
case $2:
	break;
default:
}
endsnippet

# phtml
snippet pp "php tag"
<?php $1 ?>
endsnippet

snippet pe "echo tag" w
<?= $1 ?>
endsnippet

snippet ie "if statement in phtml" b
<?php if ($1): ?>
	${VISUAL}
<?php endif ?>
endsnippet

snippet fd "foreach loop in phtml" b
<?php foreach ($1 as $2): ?>
	$3
<?php endforeach ?>
endsnippet

snippet try "try .. catch block" b
try {
	${1:${VISUAL}}
} catch ($2) {
}
endsnippet

snippet ex "exception throw" b
throw new ${1}Exception($2);
endsnippet

snippet sm "sql migration" b
$sql = <<<SQL$1SQL;
$this->addSql($sql);
endsnippet
